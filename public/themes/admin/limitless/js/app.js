/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* ------------------------------------------------------------------------------\n *\n *  # Template JS core\n *\n *  Includes minimum required JS code for proper template functioning\n *\n * ---------------------------------------------------------------------------- */\n// Setup module\n// ------------------------------\nvar App = function () {\n  //\n  // Setup module components\n  //\n  // Transitions\n  // -------------------------\n  // Disable all transitions\n  var _transitionsDisabled = function _transitionsDisabled() {\n    $('body').addClass('no-transitions');\n  }; // Enable all transitions\n\n\n  var _transitionsEnabled = function _transitionsEnabled() {\n    $('body').removeClass('no-transitions');\n  }; // Sidebars\n  // -------------------------\n  //\n  // On desktop\n  //\n  // Resize main sidebar\n\n\n  var _sidebarMainResize = function _sidebarMainResize() {\n    // Flip 2nd level if menu overflows\n    // bottom edge of browser window\n    var revertBottomMenus = function revertBottomMenus() {\n      $('.sidebar-main').find('.nav-sidebar').children('.nav-item-submenu').hover(function () {\n        var totalHeight = 0,\n            $this = $(this),\n            navSubmenuClass = 'nav-group-sub',\n            navSubmenuReversedClass = 'nav-item-submenu-reversed';\n        totalHeight += $this.find('.' + navSubmenuClass).filter(':visible').outerHeight();\n\n        if ($this.children('.' + navSubmenuClass).length) {\n          if ($this.children('.' + navSubmenuClass).offset().top + $this.find('.' + navSubmenuClass).filter(':visible').outerHeight() > document.body.clientHeight) {\n            $this.addClass(navSubmenuReversedClass);\n          } else {\n            $this.removeClass(navSubmenuReversedClass);\n          }\n        }\n      });\n    }; // If sidebar is resized by default\n\n\n    if ($('body').hasClass('sidebar-xs')) {\n      revertBottomMenus();\n    } // Toggle min sidebar class\n\n\n    $('.sidebar-main-toggle').on('click', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-xs').removeClass('sidebar-mobile-main');\n      revertBottomMenus();\n    });\n  }; // Toggle main sidebar\n\n\n  var _sidebarMainToggle = function _sidebarMainToggle() {\n    $(document).on('click', '.sidebar-main-hide', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-main-hidden');\n    });\n  }; // Toggle secondary sidebar\n\n\n  var _sidebarSecondaryToggle = function _sidebarSecondaryToggle() {\n    $(document).on('click', '.sidebar-secondary-toggle', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-secondary-hidden');\n    });\n  }; // Show right, resize main\n\n\n  var _sidebarRightMainToggle = function _sidebarRightMainToggle() {\n    $(document).on('click', '.sidebar-right-main-toggle', function (e) {\n      e.preventDefault(); // Right sidebar visibility\n\n      $('body').toggleClass('sidebar-right-visible'); // If visible\n\n      if ($('body').hasClass('sidebar-right-visible')) {\n        // Make main sidebar mini\n        $('body').addClass('sidebar-xs'); // Hide children lists if they are opened, since sliding animation adds inline CSS\n\n        $('.sidebar-main .nav-sidebar').children('.nav-item').children('.nav-group-sub').css('display', '');\n      } else {\n        $('body').removeClass('sidebar-xs');\n      }\n    });\n  }; // Show right, hide main\n\n\n  var _sidebarRightMainHide = function _sidebarRightMainHide() {\n    $(document).on('click', '.sidebar-right-main-hide', function (e) {\n      e.preventDefault(); // Opposite sidebar visibility\n\n      $('body').toggleClass('sidebar-right-visible'); // If visible\n\n      if ($('body').hasClass('sidebar-right-visible')) {\n        $('body').addClass('sidebar-main-hidden');\n      } else {\n        $('body').removeClass('sidebar-main-hidden');\n      }\n    });\n  }; // Toggle right sidebar\n\n\n  var _sidebarRightToggle = function _sidebarRightToggle() {\n    $(document).on('click', '.sidebar-right-toggle', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-right-visible');\n    });\n  }; // Show right, hide secondary\n\n\n  var _sidebarRightSecondaryToggle = function _sidebarRightSecondaryToggle() {\n    $(document).on('click', '.sidebar-right-secondary-toggle', function (e) {\n      e.preventDefault(); // Opposite sidebar visibility\n\n      $('body').toggleClass('sidebar-right-visible'); // If visible\n\n      if ($('body').hasClass('sidebar-right-visible')) {\n        $('body').addClass('sidebar-secondary-hidden');\n      } else {\n        $('body').removeClass('sidebar-secondary-hidden');\n      }\n    });\n  }; // Toggle content sidebar\n\n\n  var _sidebarComponentToggle = function _sidebarComponentToggle() {\n    $(document).on('click', '.sidebar-component-toggle', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-component-hidden');\n    });\n  }; //\n  // On mobile\n  //\n  // Expand sidebar to full screen on mobile\n\n\n  var _sidebarMobileFullscreen = function _sidebarMobileFullscreen() {\n    $('.sidebar-mobile-expand').on('click', function (e) {\n      e.preventDefault();\n      var $sidebar = $(this).parents('.sidebar'),\n          sidebarFullscreenClass = 'sidebar-fullscreen';\n\n      if (!$sidebar.hasClass(sidebarFullscreenClass)) {\n        $sidebar.addClass(sidebarFullscreenClass);\n      } else {\n        $sidebar.removeClass(sidebarFullscreenClass);\n      }\n    });\n  }; // Toggle main sidebar on mobile\n\n\n  var _sidebarMobileMainToggle = function _sidebarMobileMainToggle() {\n    $('.sidebar-mobile-main-toggle').on('click', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-mobile-main').removeClass('sidebar-mobile-secondary sidebar-mobile-right');\n\n      if ($('.sidebar-main').hasClass('sidebar-fullscreen')) {\n        $('.sidebar-main').removeClass('sidebar-fullscreen');\n      }\n    });\n  }; // Toggle secondary sidebar on mobile\n\n\n  var _sidebarMobileSecondaryToggle = function _sidebarMobileSecondaryToggle() {\n    $('.sidebar-mobile-secondary-toggle').on('click', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-mobile-secondary').removeClass('sidebar-mobile-main sidebar-mobile-right'); // Fullscreen mode\n\n      if ($('.sidebar-secondary').hasClass('sidebar-fullscreen')) {\n        $('.sidebar-secondary').removeClass('sidebar-fullscreen');\n      }\n    });\n  }; // Toggle right sidebar on mobile\n\n\n  var _sidebarMobileRightToggle = function _sidebarMobileRightToggle() {\n    $('.sidebar-mobile-right-toggle').on('click', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-mobile-right').removeClass('sidebar-mobile-main sidebar-mobile-secondary'); // Hide sidebar if in fullscreen mode on mobile\n\n      if ($('.sidebar-right').hasClass('sidebar-fullscreen')) {\n        $('.sidebar-right').removeClass('sidebar-fullscreen');\n      }\n    });\n  }; // Toggle component sidebar on mobile\n\n\n  var _sidebarMobileComponentToggle = function _sidebarMobileComponentToggle() {\n    $('.sidebar-mobile-component-toggle').on('click', function (e) {\n      e.preventDefault();\n      $('body').toggleClass('sidebar-mobile-component');\n    });\n  }; // Navigations\n  // -------------------------\n  // Sidebar navigation\n\n\n  var _navigationSidebar = function _navigationSidebar() {\n    // Define default class names and options\n    var navClass = 'nav-sidebar',\n        navItemClass = 'nav-item',\n        navItemOpenClass = 'nav-item-open',\n        navLinkClass = 'nav-link',\n        navSubmenuClass = 'nav-group-sub',\n        navSlidingSpeed = 250; // Configure collapsible functionality\n\n    $('.' + navClass).each(function () {\n      $(this).find('.' + navItemClass).has('.' + navSubmenuClass).children('.' + navItemClass + ' > ' + '.' + navLinkClass).not('.disabled').on('click', function (e) {\n        e.preventDefault(); // Simplify stuff\n\n        var $target = $(this),\n            $navSidebarMini = $('.sidebar-xs').not('.sidebar-mobile-main').find('.sidebar-main .' + navClass).children('.' + navItemClass); // Collapsible\n\n        if ($target.parent('.' + navItemClass).hasClass(navItemOpenClass)) {\n          $target.parent('.' + navItemClass).not($navSidebarMini).removeClass(navItemOpenClass).children('.' + navSubmenuClass).slideUp(navSlidingSpeed);\n        } else {\n          $target.parent('.' + navItemClass).not($navSidebarMini).addClass(navItemOpenClass).children('.' + navSubmenuClass).slideDown(navSlidingSpeed);\n        } // Accordion\n\n\n        if ($target.parents('.' + navClass).data('nav-type') == 'accordion') {\n          $target.parent('.' + navItemClass).not($navSidebarMini).siblings(':has(.' + navSubmenuClass + ')').removeClass(navItemOpenClass).children('.' + navSubmenuClass).slideUp(navSlidingSpeed);\n        }\n      });\n    }); // Disable click in disabled navigation items\n\n    $(document).on('click', '.' + navClass + ' .disabled', function (e) {\n      e.preventDefault();\n    }); // Scrollspy navigation\n\n    $('.nav-scrollspy').find('.' + navItemClass).has('.' + navSubmenuClass).children('.' + navItemClass + ' > ' + '.' + navLinkClass).off('click');\n  }; // Navbar navigation\n\n\n  var _navigationNavbar = function _navigationNavbar() {\n    // Prevent dropdown from closing on click\n    $(document).on('click', '.dropdown-content', function (e) {\n      e.stopPropagation();\n    }); // Disabled links\n\n    $('.navbar-nav .disabled a, .nav-item-levels .disabled').on('click', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }); // Show tabs inside dropdowns\n\n    $('.dropdown-content a[data-toggle=\"tab\"]').on('click', function (e) {\n      $(this).tab('show');\n    });\n  }; // Components\n  // -------------------------\n  // Tooltip\n\n\n  var _componentTooltip = function _componentTooltip() {\n    // Initialize\n    $('[data-popup=\"tooltip\"]').tooltip(); // Demo tooltips, remove in production\n\n    var demoTooltipSelector = '[data-popup=\"tooltip-demo\"]';\n\n    if ($(demoTooltipSelector).is(':visible')) {\n      $(demoTooltipSelector).tooltip('show');\n      setTimeout(function () {\n        $(demoTooltipSelector).tooltip('hide');\n      }, 2000);\n    }\n  }; // Popover\n\n\n  var _componentPopover = function _componentPopover() {\n    $('[data-popup=\"popover\"]').popover();\n  }; // Slinky\n\n\n  var _componentSlinky = function _componentSlinky() {\n    if (!$().slinky) {\n      console.warn('Warning - slinky.min.js is not loaded.');\n      return;\n    }\n\n    ; // Attach drill down menu to menu list with child levels\n\n    $('.nav-item-levels').one('shown.bs.dropdown', function () {\n      $('.dropdown-item-group').each(function () {\n        $(this).slinky({\n          title: true,\n          speed: 200\n        });\n      });\n    });\n  }; // Card actions\n  // -------------------------\n  // Reload card (uses BlockUI extension)\n\n\n  var _cardActionReload = function _cardActionReload() {\n    $('.card [data-action=reload]:not(.disabled)').on('click', function (e) {\n      e.preventDefault();\n      var $target = $(this),\n          block = $target.closest('.card'); // Block card\n\n      $(block).block({\n        message: '<i class=\"icon-spinner2 spinner\"></i>',\n        overlayCSS: {\n          backgroundColor: '#fff',\n          opacity: 0.8,\n          cursor: 'wait',\n          'box-shadow': '0 0 0 1px #ddd'\n        },\n        css: {\n          border: 0,\n          padding: 0,\n          backgroundColor: 'none'\n        }\n      }); // For demo purposes\n\n      window.setTimeout(function () {\n        $(block).unblock();\n      }, 2000);\n    });\n  }; // Collapse card\n\n\n  var _cardActionCollapse = function _cardActionCollapse() {\n    var $cardCollapsedClass = $('.card-collapsed'); // Hide if collapsed by default\n\n    $cardCollapsedClass.children('.card-header').nextAll().hide(); // Rotate icon if collapsed by default\n\n    $cardCollapsedClass.find('[data-action=collapse]').addClass('rotate-180'); // Collapse on click\n\n    $('.card [data-action=collapse]:not(.disabled)').on('click', function (e) {\n      var $target = $(this),\n          slidingSpeed = 150;\n      e.preventDefault();\n      $target.parents('.card').toggleClass('card-collapsed');\n      $target.toggleClass('rotate-180');\n      $target.closest('.card').children('.card-header').nextAll().slideToggle(slidingSpeed);\n    });\n  }; // Remove card\n\n\n  var _cardActionRemove = function _cardActionRemove() {\n    $('.card [data-action=remove]').on('click', function (e) {\n      e.preventDefault();\n      var $target = $(this),\n          slidingSpeed = 150; // If not disabled\n\n      if (!$target.hasClass('disabled')) {\n        $target.closest('.card').slideUp({\n          duration: slidingSpeed,\n          start: function start() {\n            $target.addClass('d-block');\n          },\n          complete: function complete() {\n            $target.remove();\n          }\n        });\n      }\n    });\n  }; // Card fullscreen mode\n\n\n  var _cardActionFullscreen = function _cardActionFullscreen() {\n    $('.card [data-action=fullscreen]').on('click', function (e) {\n      e.preventDefault(); // Define vars\n\n      var $target = $(this),\n          cardFullscreen = $target.closest('.card'),\n          overflowHiddenClass = 'overflow-hidden',\n          collapsedClass = 'collapsed-in-fullscreen',\n          fullscreenAttr = 'data-fullscreen'; // Toggle classes on card\n\n      cardFullscreen.toggleClass('fixed-top h-100 rounded-0'); // Configure\n\n      if (!cardFullscreen.hasClass('fixed-top')) {\n        $target.removeAttr(fullscreenAttr);\n        cardFullscreen.children('.' + collapsedClass).removeClass('show');\n        $('body').removeClass(overflowHiddenClass);\n        $target.siblings('[data-action=move], [data-action=remove], [data-action=collapse]').removeClass('d-none');\n      } else {\n        $target.attr(fullscreenAttr, 'active');\n        cardFullscreen.removeAttr('style').children('.collapse:not(.show)').addClass('show ' + collapsedClass);\n        $('body').addClass(overflowHiddenClass);\n        $target.siblings('[data-action=move], [data-action=remove], [data-action=collapse]').addClass('d-none');\n      }\n    });\n  }; // Misc\n  // -------------------------\n  // Dropdown submenus. Trigger on click\n\n\n  var _dropdownSubmenu = function _dropdownSubmenu() {\n    // All parent levels require .dropdown-toggle class\n    $('.dropdown-menu').find('.dropdown-submenu').not('.disabled').find('.dropdown-toggle').on('click', function (e) {\n      e.stopPropagation();\n      e.preventDefault(); // Remove \"show\" class in all siblings\n\n      $(this).parent().siblings().removeClass('show').find('.show').removeClass('show'); // Toggle submenu\n\n      $(this).parent().toggleClass('show').children('.dropdown-menu').toggleClass('show'); // Hide all levels when parent dropdown is closed\n\n      $(this).parents('.show').on('hidden.bs.dropdown', function (e) {\n        $('.dropdown-submenu .show, .dropdown-submenu.show').removeClass('show');\n      });\n    });\n  }; // Header elements toggler\n\n\n  var _headerElements = function _headerElements() {\n    // Toggle visible state of header elements\n    $('.header-elements-toggle').on('click', function (e) {\n      e.preventDefault();\n      $(this).parents('[class*=header-elements-]').find('.header-elements').toggleClass('d-none');\n    }); // Toggle visible state of footer elements\n\n    $('.footer-elements-toggle').on('click', function (e) {\n      e.preventDefault();\n      $(this).parents('.card-footer').find('.footer-elements').toggleClass('d-none');\n    });\n  }; //\n  // Return objects assigned to module\n  //\n\n\n  return {\n    // Disable transitions before page is fully loaded\n    initBeforeLoad: function initBeforeLoad() {\n      _transitionsDisabled();\n    },\n    // Enable transitions when page is fully loaded\n    initAfterLoad: function initAfterLoad() {\n      _transitionsEnabled();\n    },\n    // Initialize all sidebars\n    initSidebars: function initSidebars() {\n      // On desktop\n      _sidebarMainResize();\n\n      _sidebarMainToggle();\n\n      _sidebarSecondaryToggle();\n\n      _sidebarRightMainToggle();\n\n      _sidebarRightMainHide();\n\n      _sidebarRightToggle();\n\n      _sidebarRightSecondaryToggle();\n\n      _sidebarComponentToggle(); // On mobile\n\n\n      _sidebarMobileFullscreen();\n\n      _sidebarMobileMainToggle();\n\n      _sidebarMobileSecondaryToggle();\n\n      _sidebarMobileRightToggle();\n\n      _sidebarMobileComponentToggle();\n    },\n    // Initialize all navigations\n    initNavigations: function initNavigations() {\n      _navigationSidebar();\n\n      _navigationNavbar();\n    },\n    // Initialize all components\n    initComponents: function initComponents() {\n      _componentTooltip();\n\n      _componentPopover();\n\n      _componentSlinky();\n    },\n    // Initialize all card actions\n    initCardActions: function initCardActions() {\n      _cardActionReload();\n\n      _cardActionCollapse();\n\n      _cardActionRemove();\n\n      _cardActionFullscreen();\n    },\n    // Dropdown submenu\n    initDropdownSubmenu: function initDropdownSubmenu() {\n      _dropdownSubmenu();\n    },\n    initHeaderElementsToggle: function initHeaderElementsToggle() {\n      _headerElements();\n    },\n    // Initialize core\n    initCore: function initCore() {\n      App.initSidebars();\n      App.initNavigations();\n      App.initComponents();\n      App.initCardActions();\n      App.initDropdownSubmenu();\n      App.initHeaderElementsToggle();\n    }\n  };\n}(); // Initialize module\n// ------------------------------\n// When content is loaded\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  App.initBeforeLoad();\n  App.initCore();\n}); // When page is fully loaded\n\nwindow.addEventListener('load', function () {\n  App.initAfterLoad();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ 0:
/*!***********************************!*\
  !*** multi ./resources/js/app.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/vagrant/www/kayyum/resources/js/app.js */"./resources/js/app.js");


/***/ })

/******/ });